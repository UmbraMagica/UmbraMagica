import { useState } from "react";
import { useQuery, useMutation, useQueryClient } from "@tanstack/react-query";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Wand2, Sparkles, ArrowLeft, Eye, EyeOff } from "lucide-react";
import { useToast } from "@/hooks/use-toast";
import { useLocation } from "wouter";
import type { Wand } from "@shared/schema";

export default function Ollivanders() {
  const [, setLocation] = useLocation();
  const { toast } = useToast();
  const queryClient = useQueryClient();
  const [showWandDetails, setShowWandDetails] = useState(false);

  // Get current user and main character
  const { data: user } = useQuery({
    queryKey: ['/api/auth/user']
  });

  const { data: mainCharacter } = useQuery({
    queryKey: ['/api/characters/main']
  });

  // Get character's current wand
  const { data: characterWand, isLoading: wandLoading } = useQuery({
    queryKey: [`/api/characters/${mainCharacter?.id}/wand`],
    enabled: !!mainCharacter?.id
  });

  // Visit Ollivanders mutation
  const visitOllivandersMutation = useMutation({
    mutationFn: async () => {
      if (!mainCharacter?.id) throw new Error("No character selected");
      
      const response = await fetch(`/api/characters/${mainCharacter.id}/visit-ollivanders`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' }
      });
      
      if (!response.ok) {
        const error = await response.json();
        throw new Error(error.message || 'Failed to visit Ollivanders');
      }
      
      return response.json();
    },
    onSuccess: (newWand: Wand) => {
      toast({
        title: "Gratulujeme!",
        description: `${mainCharacter?.firstName} z√≠skal novou h≈Ølku od pana Ollivandera!`
      });
      queryClient.invalidateQueries({ queryKey: [`/api/characters/${mainCharacter?.id}/wand`] });
    },
    onError: (error: Error) => {
      toast({
        title: "Chyba",
        description: error.message,
        variant: "destructive"
      });
    }
  });

  if (!user || !mainCharacter) {
    return (
      <div className="container mx-auto p-6">
        <div className="text-center">
          <p className="text-muted-foreground">Vyberte si postavu pro n√°v≈°tƒõvu U Ollivandera.</p>
        </div>
      </div>
    );
  }

  // If character is dead, they can't visit
  if (mainCharacter.deathDate) {
    return (
      <div className="container mx-auto p-6">
        <Card>
          <CardContent className="text-center py-8">
            <p className="text-muted-foreground">Mrtv√© postavy nemohou nav≈°t√≠vit obchod s h≈Ølkami.</p>
            <Button 
              onClick={() => setLocation('/')} 
              className="mt-4"
              variant="outline"
            >
              Zpƒõt dom≈Ø
            </Button>
          </CardContent>
        </Card>
      </div>
    );
  }

  const hasWand = characterWand && !wandLoading;

  return (
    <div className="container mx-auto p-6 max-w-4xl">
      <div className="flex items-center gap-4 mb-6">
        <Button
          onClick={() => setLocation('/')}
          variant="outline"
          size="sm"
        >
          <ArrowLeft className="h-4 w-4 mr-2" />
          Zpƒõt dom≈Ø
        </Button>
        <h1 className="text-3xl font-bold flex items-center gap-2">
          <Wand2 className="h-8 w-8" />
          U Ollivandera - V√Ωrobce h≈Ølek
        </h1>
      </div>

      <div className="grid gap-6">
        {/* Shop Description */}
        <Card>
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <Sparkles className="h-5 w-5" />
              V√≠tejte v nejlep≈°√≠m obchodƒõ s h≈Ølkami v kouzeln√© Anglii!
            </CardTitle>
          </CardHeader>
          <CardContent className="space-y-4">
            <p className="text-muted-foreground">
              Pan Ollivander v√°s v√≠t√° ve sv√©m slavn√©m obchodƒõ. Ka≈æd√° h≈Ølka je jedineƒçn√° a vyb√≠r√° si sv√©ho ƒçarodƒõje. 
              Zde naleznete h≈Ølky vyroben√© z nejkvalitnƒõj≈°√≠ch materi√°l≈Ø s j√°dry z draƒç√≠ bl√°ny, 
              vlasu jednoro≈æce nebo p√©ra f√©nixe.
            </p>
            <div className="bg-muted/30 p-4 rounded-lg">
              <p className="text-sm font-medium mb-2">Pamatujte:</p>
              <ul className="text-sm text-muted-foreground space-y-1">
                <li>‚Ä¢ H≈Ølka si vyb√≠r√° ƒçarodƒõje, ne naopak</li>
                <li>‚Ä¢ Ka≈æd√° h≈Ølka m√° sv√© vlastn√≠ j√°dro, d≈ôevo, d√©lku a ohebnost</li>
                <li>‚Ä¢ Bez h≈Ølky nelze ses√≠lat kouzla</li>
                <li>‚Ä¢ Ka≈æd√° postava m≈Ø≈æe m√≠t pouze jednu h≈Ølku</li>
              </ul>
            </div>
          </CardContent>
        </Card>

        {/* Character's Current Wand */}
        {hasWand && (
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center justify-between">
                <span>Va≈°e souƒçasn√° h≈Ølka</span>
                <Button
                  variant="ghost"
                  size="sm"
                  onClick={() => setShowWandDetails(!showWandDetails)}
                >
                  {showWandDetails ? <EyeOff className="h-4 w-4" /> : <Eye className="h-4 w-4" />}
                  {showWandDetails ? "Skr√Ωt detaily" : "Zobrazit detaily"}
                </Button>
              </CardTitle>
            </CardHeader>
            <CardContent>
              <div className="grid gap-4">
                <div className="flex items-center gap-4">
                  <Badge variant="secondary" className="text-sm">
                    {characterWand.wood}
                  </Badge>
                  <Badge variant="outline" className="text-sm">
                    {characterWand.core}
                  </Badge>
                  <Badge variant="outline" className="text-sm">
                    {characterWand.length}
                  </Badge>
                  <Badge variant="outline" className="text-sm">
                    {characterWand.flexibility}
                  </Badge>
                </div>
                
                {showWandDetails && characterWand.description && (
                  <div className="bg-muted/30 p-4 rounded-lg">
                    <p className="text-sm text-muted-foreground">
                      {characterWand.description}
                    </p>
                    <p className="text-xs text-muted-foreground mt-2">
                      Z√≠sk√°no: {new Date(characterWand.acquiredAt).toLocaleDateString('cs-CZ')}
                    </p>
                  </div>
                )}

                <div className="bg-green-50 dark:bg-green-950/20 border border-green-200 dark:border-green-800 p-4 rounded-lg">
                  <p className="text-green-800 dark:text-green-200 text-sm">
                    ‚úÖ Va≈°a postava m√° h≈Ølku a m≈Ø≈æe ses√≠lat kouzla!
                  </p>
                </div>
              </div>
            </CardContent>
          </Card>
        )}

        {/* Get a Wand */}
        {!hasWand && !wandLoading && (
          <Card>
            <CardHeader>
              <CardTitle>Z√≠skejte svou prvn√≠ h≈Ølku</CardTitle>
            </CardHeader>
            <CardContent className="space-y-4">
              <p className="text-muted-foreground">
                Pan Ollivander pozornƒõ sleduje va≈°i postavu a je p≈ôipraven v√°m pomoci naj√≠t tu pravou h≈Ølku. 
                Zkuste nƒõkolik h≈Ølek a on v√°m vybere tu, kter√° si v√°s zvol√≠.
              </p>
              
              <div className="bg-yellow-50 dark:bg-yellow-950/20 border border-yellow-200 dark:border-yellow-800 p-4 rounded-lg">
                <p className="text-yellow-800 dark:text-yellow-200 text-sm">
                  ‚ö†Ô∏è Bez h≈Ølky nem≈Ø≈æete ses√≠lat kouzla v chatech!
                </p>
              </div>

              <Button
                onClick={() => visitOllivandersMutation.mutate()}
                disabled={visitOllivandersMutation.isPending}
                size="lg"
                className="w-full"
              >
                <Wand2 className="h-5 w-5 mr-2" />
                {visitOllivandersMutation.isPending ? "Vyb√≠r√°m h≈Ølku..." : "Nav≈°t√≠vit pana Ollivandera"}
              </Button>
            </CardContent>
          </Card>
        )}

        {/* Loading state */}
        {wandLoading && (
          <Card>
            <CardContent className="text-center py-8">
              <p className="text-muted-foreground">Kontroluji va≈°i h≈Ølku...</p>
            </CardContent>
          </Card>
        )}

        {/* Wand Information */}
        <Card>
          <CardHeader>
            <CardTitle>O h≈Ølk√°ch</CardTitle>
          </CardHeader>
          <CardContent className="space-y-4">
            <div>
              <h4 className="font-medium mb-2">J√°dra h≈Ølek:</h4>
              <div className="space-y-2 text-sm">
                <p><strong>üêâ Bl√°na z draƒç√≠ho srdce:</strong> Nejsilnƒõj≈°√≠ j√°dro, ide√°ln√≠ pro bojov√° kouzla</p>
                <p><strong>ü¶Ñ Vlas z h≈ô√≠vy jednoro≈æce:</strong> Nejvƒõrnƒõj≈°√≠ j√°dro, vhodn√© pro l√©ƒçiv√° kouzla</p>
                <p><strong>üî• Pero f√©nixe:</strong> Nejr≈ô√≠d≈°√≠ j√°dro, schopn√© nejvƒõt≈°√≠ch kouzel</p>
              </div>
            </div>
            
            <div>
              <h4 className="font-medium mb-2">D√©lky h≈Ølek:</h4>
              <div className="grid grid-cols-2 gap-2 text-sm">
                <p><strong>7"-9":</strong> Kr√°tk√©, precizn√≠ h≈Ølky</p>
                <p><strong>10"-12":</strong> Bƒõ≈æn√©, vyv√°≈æen√© h≈Ølky</p>
                <p><strong>13"-15":</strong> Dlouh√©, mocn√© h≈Ølky</p>
                <p><strong>16"+:</strong> V√Ωjimeƒçnƒõ dlouh√© h≈Ølky</p>
              </div>
            </div>

            <div>
              <h4 className="font-medium mb-2">Ohebnost:</h4>
              <p className="text-sm text-muted-foreground">
                Od nezlomn√Ωch a≈æ po vrbovit√© - ka≈æd√° ohebnost odpov√≠d√° charakteru ƒçarodƒõje.
              </p>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
}